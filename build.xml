<?xml version="1.0"?>
<!-- $Id: build.xml 2215 2009-11-20 04:32:24Z boconnor $ -->
<project name="seqware-qe-jdk" basedir="." default="all">

    <property name="src" value="src"/>
    <property name="src.test" value="src/test/java"/>
    <property name="lib" value="lib"/>
    <property name="dist" value="dist"/>
    <property name="classes" value="classes"/>
    <property name="classes.test" value="testclasses"/>
    <property name="test.output" value="dist/test"/>
    <property name="javac.debug" value="true"/>
    <property name="seqware-qe-version" value="0.7.0"/>
    <!-- VARS FOR TESTING -->
    <property name="tools.db.path" value="data/test_databases/tools_generated_db"/>
    <property name="watson.genome.db.path" value="data/test_databases/watson_genome_db"/>
	<property name="venter.genome.db.path" value="data/test_databases/venter_genome_db"/>
	<property name="yanhuang.genome.db.path" value="data/test_databases/yanhuang_genome_db"/>
    <property name="api.db.path" value="data/test_databases/api_generated_db"/>
    <property name="cache.size" value="52428800"/>
    <property name="locks.count" value="10000"/>
    <property name="threads" value="1"/>
    <property name="test.pileup" value="src/test/resources/net/sourceforge/seqware/queryengine/tools/MutationImporter/MutationImporter_Sample.pileup"/>
	<property name="watson.genome.test.input" value="src/test/resources/net/sourceforge/seqware/queryengine/tools/MutationImporter/watson_genome_sample.txt"/>
	<property name="venter.genome.test.input" value="src/test/resources/net/sourceforge/seqware/queryengine/tools/MutationImporter/venter_genome_sample.txt"/>
	<property name="yanhuang.genome.test.input" value="src/test/resources/net/sourceforge/seqware/queryengine/tools/MutationImporter/yanhuang_genome_sample.txt"/>
    <property name="coverage.bin.size" value="1000"/>

<!-- INIT -->
    <target name="init">
        <path id="classpath">
            <fileset dir="${lib}">
                <include name="**/*.jar"/>
            </fileset>
        </path>
    </target>

<!-- CLEAN -->
    <target name="clean">
        <delete dir="${classes}"/>
        <delete dir="${classes.test}"/>
        <delete dir="${test.output}"/>
    </target>

<!-- COMPILE -->
    <target name="compile" depends="compile-src, compile-tests"
            description="Compile files without cleaning">
    </target>

    <target name="compile-src" depends="init" description="Compile files without cleaning">
        <mkdir dir="${classes}"/>
        <javac destdir="${classes}"
               optimize="${javac.opt}"
               debug="${javac.debug}"
               nowarn="yes">
            <!--<compilerarg value="-Xlint:all"/>-->
            <!--<compilerarg value="-Xlint:unchecked"/>-->
            <src path="${src}"/>
            <classpath refid="classpath"/>
        </javac>
    </target>

    <target name="compile-tests" depends="init" description="Compile test files without cleaning">
        <mkdir dir="${classes.test}"/>
        <javac destdir="${classes.test}"
               optimize="${javac.opt}"
               debug="${javac.debug}"
               nowarn="yes">
            <!--<compilerarg value="-Xlint:unchecked"/>-->
            <src path="${src.test}"/>
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${classes}"/>
            </classpath>
        </javac>
    </target>

<!-- TESTS -->
<!-- PROTOTYPE TESTS -->
    <target name="test-hbase" depends="compile" description="Creates and tests DB roundtrip using command line tools.">
    	<!-- IMPORT MUTATIONS -->
        <java classname="net.sourceforge.seqware.queryengine.prototypes.hadoop.HBaseWrite" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
                <pathelement path="/usr/lib/hbase/conf"/>
        	</classpath>
        </java>
        <java classname="net.sourceforge.seqware.queryengine.prototypes.hadoop.HBaseRead" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
                <pathelement path="/usr/lib/hbase/conf"/>
        	</classpath>
        	<arg value="GO:12323121hg18.chr22:000000000001234.feature.Genome032399.v1337181530274"/>
        </java>
    </target>
<!-- TEST USING COMMAND LINE TOOLS -->
    <target name="test-cmdline" depends="compile" description="Creates and tests DB roundtrip using command line tools.">
    	<!-- CLEANUP PREVIOUS DB -->
    	<delete includeEmptyDirs="true">
    	    <fileset dir="${tools.db.path}">
    		  <include name="*"/>
    		</fileset>
    	</delete>
    	<delete includeEmptyDirs="true">
    	    <fileset dir="${watson.genome.db.path}">
    		  <include name="*"/>
    		</fileset>
    	</delete>
    	<delete includeEmptyDirs="true">
    	    <fileset dir="${venter.genome.db.path}">
    		  <include name="*"/>
    		</fileset>
    	</delete>
    	<delete includeEmptyDirs="true">
    	    <fileset dir="${yanhuang.genome.db.path}">
    		  <include name="*"/>
    		</fileset>
    	</delete>
    	<!-- IMPORT MUTATIONS -->
        <java classname="net.sourceforge.seqware.queryengine.tools.importers.VariantImporter" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="PileupVariantImportWorker"/>
        	<arg value="${tools.db.path}"/>
        	<arg value="true"/>
        	<arg value="0"/>
        	<arg value="50000"/>
        	<arg value="0"/>
        	<arg value="false"/>
        	<arg value="true"/>
        	<arg value="true"/>
        	<arg value="33"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="${threads}"/>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${test.pileup}"/>
        </java>
    	<!-- IMPORT WATSON GENOME MUTATIONS -->
        <java classname="net.sourceforge.seqware.queryengine.tools.importers.VariantImporter" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="WatsonGenomeVariantImportWorker"/>
        	<arg value="${watson.genome.db.path}"/>
        	<arg value="true"/>
        	<arg value="0"/>
        	<arg value="50000"/>
        	<arg value="0"/>
        	<arg value="false"/>
        	<arg value="true"/>
        	<arg value="true"/>
        	<arg value="33"/>
        	<arg value="${cache.size}"/>
          <arg value="${locks.count}"/>
        	<arg value="${threads}"/>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${watson.genome.test.input}"/>
        </java>
    	<!-- IMPORT VENTER GENOME MUTATIONS -->
        <java classname="net.sourceforge.seqware.queryengine.tools.importers.VariantImporter" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="VenterGenomeVariantImportWorker"/>
        	<arg value="${venter.genome.db.path}"/>
        	<arg value="true"/>
        	<arg value="0"/>
        	<arg value="50000"/>
        	<arg value="0"/>
        	<arg value="false"/>
        	<arg value="true"/>
        	<arg value="true"/>
        	<arg value="33"/>
        	<arg value="${cache.size}"/>
          <arg value="${locks.count}"/>
        	<arg value="${threads}"/>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${venter.genome.test.input}"/>
        </java>
    	<!-- IMPORT YAN_HUANG GENOME MUTATIONS -->
        <java classname="net.sourceforge.seqware.queryengine.tools.importers.VariantImporter" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="YanHuangGenomeVariantImportWorker"/>
        	<arg value="${yanhuang.genome.db.path}"/>
        	<arg value="true"/>
        	<arg value="0"/>
        	<arg value="50000"/>
        	<arg value="0"/>
        	<arg value="false"/>
        	<arg value="true"/>
        	<arg value="true"/>
        	<arg value="33"/>
        	<arg value="${cache.size}"/>
          <arg value="${locks.count}"/>
        	<arg value="${threads}"/>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${yanhuang.genome.test.input}"/>
        </java>
    	<!-- IMPORT CONSEQUENCES -->
        <java classname="net.sourceforge.seqware.queryengine.tools.importers.VariantConsequenceImporter" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${tools.db.path}"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/MutationConsequenceImporter/MutationConsequenceImporter_Sample.txt"/>
        </java>
    	<!-- IMPORT CONSEQUENCES BY POSITION -->
        <java classname="net.sourceforge.seqware.queryengine.tools.importers.VariantConsequenceByPositionImporter" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${tools.db.path}"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/MutationConsequenceImporter/MutationConsequenceImporter_Sample_2.txt"/>
        </java>
    	<!-- IMPORT COVERAGE -->
        <java classname="net.sourceforge.seqware.queryengine.tools.importers.PileupCoverageImporter" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${tools.db.path}"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="false"/>
        	<arg value="1000"/>
        	<arg value="${test.pileup}"/>
        </java>    	
    	<!-- IMPORT DBSNP TAGS BY POSITION -->
        <java classname="net.sourceforge.seqware.queryengine.tools.importers.TagAnnotationByPositionImporter" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${tools.db.path}"/>
        	<arg value="mismatch"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/MutationDbSNPImporter/TagAnnotationByPositionImporter_Sample.dbSNP.tags"/>
        </java>
    	<!-- IMPORT DBSNP TAGS -->
        <java classname="net.sourceforge.seqware.queryengine.tools.importers.TagAnnotationImporter" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${tools.db.path}"/>
        	<arg value="mismatch"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/MutationDbSNPImporter/MutationDbSNPImporter_Sample.dbSNP.tags"/>
        </java>
    	<!-- TAG WITH CONTIG -->
        <java classname="net.sourceforge.seqware.queryengine.tools.annotators.AnnotateVariantsWithContigAndZygosity" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${tools.db.path}"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        </java>
    	<!-- EXPORT AS TXT DUMP -->
        <java classname="net.sourceforge.seqware.queryengine.tools.exporters.TextDumper" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${tools.db.path}"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/TextDumper/TextDump.new.txt"/>
        </java>
    	<!-- EXPORT WATSON GENOME AS TXT DUMP -->
        <java classname="net.sourceforge.seqware.queryengine.tools.exporters.TextDumper" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${watson.genome.db.path}"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/TextDumper/WatsonGenomeTextDump.new.txt"/>
        </java>
    	<!-- EXPORT VENTER GENOME AS TXT DUMP -->
        <java classname="net.sourceforge.seqware.queryengine.tools.exporters.TextDumper" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${venter.genome.db.path}"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/TextDumper/VenterGenomeTextDump.new.txt"/>
        </java>
    	<!-- EXPORT YAN_HUANG GENOME AS TXT DUMP -->
        <java classname="net.sourceforge.seqware.queryengine.tools.exporters.TextDumper" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${venter.genome.db.path}"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/TextDumper/YanHuangGenomeTextDump.new.txt"/>
        </java>
    	<!-- EXPORT AS TAGS TXT DUMP -->
        <java classname="net.sourceforge.seqware.queryengine.tools.exporters.TagDumper" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${tools.db.path}"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/TextDumper/TagDump.new.txt"/>
        </java>
    	<!-- EXPORT WATSON GENOME AS TAGS TXT DUMP -->
        <java classname="net.sourceforge.seqware.queryengine.tools.exporters.TagDumper" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${watson.genome.db.path}"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/TextDumper/WatsonGenomeTagDump.new.txt"/>
        </java>
    	<!-- EXPORT VENTER GENOME AS TAGS TXT DUMP -->
        <java classname="net.sourceforge.seqware.queryengine.tools.exporters.TagDumper" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${venter.genome.db.path}"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/TextDumper/VenterGenomeTagDump.new.txt"/>
        </java>
    	<!-- EXPORT YAN HUANG GENOME AS TAGS TXT DUMP -->
        <java classname="net.sourceforge.seqware.queryengine.tools.exporters.TagDumper" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="${yanhuang.genome.db.path}"/>
        	<arg value="${cache.size}"/>
                <arg value="${locks.count}"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/TextDumper/YanHuangGenomeTagDump.new.txt"/>
        </java>
    	<!-- EXPORT WATSON GENOME AS BED -->
        <java classname="net.sourceforge.seqware.queryengine.tools.exporters.BEDExporter" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="${watson.genome.db.path}"/>
        	<arg value="watson"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/BEDExporter"/>
        	<arg value="true"/>
        	<arg value="true"/>
        	<arg value="0"/>
        	<arg value="1000000"/>
        	<arg value="0"/>
        	<arg value="0"/>
        	<arg value="0"/>
        	<arg value="false"/>
        	<arg value="0"/>
        	<arg value="0-100"/>
        	<arg value="0-100"/>
        	<arg value="${cache.size}"/>
        	<arg value="${locks.count}"/>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="false"/>
        	<arg value="false"/>
        </java>
    	<!-- EXPORT VENTER GENOME AS BED -->
        <java classname="net.sourceforge.seqware.queryengine.tools.exporters.BEDExporter" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="${venter.genome.db.path}"/>
        	<arg value="venter"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/BEDExporter"/>
        	<arg value="true"/>
        	<arg value="true"/>
        	<arg value="0"/>
        	<arg value="1000000"/>
        	<arg value="0"/>
        	<arg value="0"/>
        	<arg value="0"/>
        	<arg value="false"/>
        	<arg value="0"/>
        	<arg value="0-100"/>
        	<arg value="0-100"/>
        	<arg value="${cache.size}"/>
        	<arg value="${locks.count}"/>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="false"/>
        	<arg value="false"/>
        </java>
    	<!-- EXPORT YAN HUANG GENOME AS BED -->
        <java classname="net.sourceforge.seqware.queryengine.tools.exporters.BEDExporter" fork="true" classpathref="classpath">
        	<classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
        	</classpath>
        	<arg value="${yanhuang.genome.db.path}"/>
        	<arg value="yanhuang"/>
        	<arg value="src/test/resources/net/sourceforge/seqware/queryengine/tools/BEDExporter"/>
        	<arg value="true"/>
        	<arg value="true"/>
        	<arg value="0"/>
        	<arg value="1000000"/>
        	<arg value="0"/>
        	<arg value="0"/>
        	<arg value="0"/>
        	<arg value="false"/>
        	<arg value="0"/>
        	<arg value="0-100"/>
        	<arg value="0-100"/>
        	<arg value="${cache.size}"/>
        	<arg value="${locks.count}"/>
        	<arg value="BerkeleyDB"/>
        	<arg value="NA"/>
        	<arg value="NA"/>
        	<arg value="false"/>
        	<arg value="false"/>
        </java>
    </target>
  
<!-- TEST USING API -->
  <target name="test" depends="compile" description="Run unit tests">
    <!-- CLEANUP PREVIOUS DB -->
    <delete includeEmptyDirs="true">
        <fileset dir="${api.db.path}">
        <include name="*"/>
      </fileset>
    </delete>
      <taskdef resource="testngtasks" classpathref="classpath"/>
      <testng suitename="berkeleydb.backend.tests" classpathref="classpath" outputdir="${test.output}"
              failureproperty="tests.failed" excludedgroups="slow" enableAssert="true"
              verbose="2">
          <jvmarg line="-ea -Xmx512M"/>
          <sysproperty key="db.path" value="${api.db.path}"/>
          <sysproperty key="coverage.bin.size" value="${coverage.bin.size}"/>
          <sysproperty key="cache.size" value="${cache.size}"/>
          <classpath>
              <pathelement path="${classes}"/>
              <pathelement path="${classes.test}"/>
          </classpath>
          <classfileset dir="${classes.test}">
                <include name="**/*Test*.class"/>
          </classfileset>
      </testng>
      <fail if="tests.failed" message="There were failed unit tests"/>
  </target>
  <target name="test-postgresql" depends="compile" description="Run unit tests">
      <taskdef resource="testngtasks" classpathref="classpath"/>
      <testng suitename="berkeleydb.backend.tests" classpathref="classpath" outputdir="${test.output}"
              failureproperty="tests.failed" excludedgroups="slow" enableAssert="true"
              verbose="2">
          <jvmarg line="-ea -Xmx512M"/>
          <sysproperty key="db.path" value="${api.db.path}"/>
          <sysproperty key="coverage.bin.size" value="${coverage.bin.size}"/>
        <sysproperty key="cache.size" value="${cache.size}"/>
        <sysproperty key="db" value="seqware_qe_db"/>
        <sysproperty key="user" value="seqware"/>
        <sysproperty key="pass" value="seqware"/>
        <sysproperty key="dbserver" value="localhost"/>
          <classpath>
              <pathelement path="${classes}"/>
              <pathelement path="${classes.test}"/>
          </classpath>
          <classfileset dir="${classes.test}">
              <include name="**/PostgreSQLTest.class"/>
          </classfileset>
      </testng>
      <fail if="tests.failed" message="There were failed unit tests"/>
  </target>

    <target name="single-test"
            depends="compile, compile-tests"
            description="Compile and run a single test.">
        <taskdef resource="testngtasks" classpathref="classpath"/>
        <fail unless="name" message="Please provide input test: -Dname=..." />
        <testng suitename="cnv-single-test" classpathref="classpath" outputdir="${test.output}">
            <jvmarg line="-ea -Xmx512M"/>
            <classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.test}"/>
            </classpath>
            <classfileset dir="${classes.test}">
                <include name="**/${name}.class"/>
            </classfileset>
        </testng>
    </target>

<!-- JAR FILE -->
    <target name="seqware-qe-jar" depends="compile"
            description="Builds seqware-qe-${seqware-qe-version}.jar for inclusion in other projects">
        <mkdir dir="${dist}"/>
        <jar destfile="${dist}/seqware-qe-${seqware-qe-version}.jar" compress="no">
            <fileset dir="${classes}" includes ="net/sourceforge/seqware/queryengine/**/*.*"/>
            <zipgroupfileset dir="${lib}" includes="*.jar"/>
        </jar>
    </target>

<!-- JAVADOCS -->
    <target name="javadoc" depends="init" description="Generates the project javadoc.">
        <javadoc
           sourcepath="${src}"
           destdir="javadoc"
           packagenames="net.sourceforge.seqware.queryengine.*"
           windowtitle="SeqWare QueryEngine Tools JDK API Documentation"
           doctitle="&lt;h1&gt;SeqWare QueryEngine Tools JDK API Documentation&lt;/h1&gt;"
           author="true"
           protected="true"
           use="true"
           version="true">
          <classpath location="${java.home}/../lib/tools.jar:/usr/share/java/db.jar"/>
          <link href="http://java.sun.com/javase/6/docs/api/"/>
          </javadoc>
        </target>

<!-- ALL -->
    <target name="all" depends="compile, seqware-qe-jar" description="Default build target"/>

</project>
