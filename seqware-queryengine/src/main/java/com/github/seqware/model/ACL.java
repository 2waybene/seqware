package com.github.seqware.model;

import java.util.UUID;

/**
 * Access control list that determines permissions and access rights to features
 * and feature sets.
 *
 * Access control lists are generated by a factory pattern, where a user can
 * request an ACL object that is then assembled and returned with a
 * configuration that is in accordance with the ACL constraints that are
 * applicable to the current user context.
 *
 * @author dyuen
 * @author jbaran
 */
public class ACL extends Particle implements ACLable {

    /**
     * Creates a new access control list.
     */
    private ACL() {
        super();
    }

    /**
     * Factory method for creating new context-aware ACL objects.
     *
     * @return An ACL object that is in accordance with the current user access
     * context.
     * @throws SecurityException Thrown when the current ACL context does not
     * permit getting a new ACL instance.
     */
    public ACL getInstance() throws SecurityException {
        return new ACL();
    }

    public ACL getPermissions() {
        return this;
    }

    public void setPermissions(ACL acl) {
        throw new SecurityException("No one has currently access to set permissions.");
    }

    /**
     * Find out whether the current user has access to read information from the
     * associated object
     *
     * @return true iff the object is readable
     */
    public boolean getReadable() {
        throw new UnsupportedOperationException("Not supported yet");
    }

    /**
     * Find out whether the current user has access to change fields in the
     * associated object
     *
     * @return true iff object is changeable
     */
    public boolean getWriteable() {
        throw new UnsupportedOperationException("Not supported yet");
    }

    /**
     * Get the owner for the object
     * @return User that owns the object
     */
    public User getOwner() {
        throw new UnsupportedOperationException("Not supported yet");
    }

    /**
     * Get the group for the object
     * @return Group that the object belongs to 
     */
    public Group getGroup() {
        throw new UnsupportedOperationException("Not supported yet");
    }

    /**
     * Get whether 0) owner can read, 1) owner can write, 2) group can read, 3)
     * group can write, 4) other users can read 5) other users can write
     *
     * @return array access to RW rights for owner, group, and others
     */
    public boolean[] getAccess() {
        throw new UnsupportedOperationException("Not supported yet");
    }
}
